#!/usr/bin/env bash
###################################################################################
# AWS IAM - Check inactive users based on access key usage, excluding root account
#
# VN 202105
###################################################################################

profile="default"

if [ ! -z $1 ];then
   profile=$1
fi

#generate iam-credential report
aws iam generate-credential-report --profile=${profile} --output json
RC_GENREPORT=$?
if [[ ${RC_GENREPORT} != 0 ]] ;then
	echo "ERR: IAM credentials report cannot be generated for ${profile}!"
	exit 1
fi

#header
echo "inactive_user,key1_lastused,key2_lastused"

#output is in base64 format, so print it to console and decode it
aws iam get-credential-report --output text --query Content --profile=${profile} | base64 -d | while read i;do
	user=$(echo $i|awk -F"," '{print $1}')

	#ignore root user from this check
	if [[ ${user} == "<root_account>" ]];then
		continue
	fi

	key1_active=$(echo $i|awk -F"," '{print $9}')
	key2_active=$(echo $i|awk -F"," '{print $14}')

	#debug
	#echo "$user, $key1_active, $key2_active"

	#if access keys are inactive
	if [[ ${key1_active} == "false" ]] && [[ ${key2_active} == "false" ]];then
		key1_lastused=$(echo $i|awk -F"," '{print $11}')
		key2_lastused=$(echo $i|awk -F"," '{print $16}')
		echo "${user},${key1_lastused},${key2_lastused}"
	fi
done
